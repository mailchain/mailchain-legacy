// Copyright 2021 Finobo
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: balance.go

// Package mailboxtest is a generated GoMock package.
package mailboxtest

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBalanceFinder is a mock of BalanceFinder interface.
type MockBalanceFinder struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceFinderMockRecorder
}

// MockBalanceFinderMockRecorder is the mock recorder for MockBalanceFinder.
type MockBalanceFinderMockRecorder struct {
	mock *MockBalanceFinder
}

// NewMockBalanceFinder creates a new mock instance.
func NewMockBalanceFinder(ctrl *gomock.Controller) *MockBalanceFinder {
	mock := &MockBalanceFinder{ctrl: ctrl}
	mock.recorder = &MockBalanceFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceFinder) EXPECT() *MockBalanceFinderMockRecorder {
	return m.recorder
}

// GetBalance mocks base method.
func (m *MockBalanceFinder) GetBalance(ctx context.Context, protocol, network string, address []byte) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, protocol, network, address)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockBalanceFinderMockRecorder) GetBalance(ctx, protocol, network, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockBalanceFinder)(nil).GetBalance), ctx, protocol, network, address)
}
