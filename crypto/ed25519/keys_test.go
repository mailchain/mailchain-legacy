package ed25519

import (
	"github.com/mailchain/mailchain/encoding/encodingtest"
	"golang.org/x/crypto/ed25519"
)

var (
	aliceSeed            = encodingtest.MustDecodeHex("0d9b4a3c10721991c6b806f0f343535dc2b46c74bece50a0a0d6b9f0070d3157")
	alicePrivateKey      = PrivateKey{key: ed25519.PrivateKey{0xd, 0x9b, 0x4a, 0x3c, 0x10, 0x72, 0x19, 0x91, 0xc6, 0xb8, 0x6, 0xf0, 0xf3, 0x43, 0x53, 0x5d, 0xc2, 0xb4, 0x6c, 0x74, 0xbe, 0xce, 0x50, 0xa0, 0xa0, 0xd6, 0xb9, 0xf0, 0x7, 0xd, 0x31, 0x57, 0x72, 0x3c, 0xaa, 0x23, 0xa5, 0xb5, 0x11, 0xaf, 0x5a, 0xd7, 0xb7, 0xef, 0x60, 0x76, 0xe4, 0x14, 0xab, 0x7e, 0x75, 0xa9, 0xdc, 0x91, 0xe, 0xa6, 0xe, 0x41, 0x7a, 0x2b, 0x77, 0xa, 0x56, 0x71}} //nolint: lll
	alicePrivateKeyBytes = []byte{0xd, 0x9b, 0x4a, 0x3c, 0x10, 0x72, 0x19, 0x91, 0xc6, 0xb8, 0x6, 0xf0, 0xf3, 0x43, 0x53, 0x5d, 0xc2, 0xb4, 0x6c, 0x74, 0xbe, 0xce, 0x50, 0xa0, 0xa0, 0xd6, 0xb9, 0xf0, 0x7, 0xd, 0x31, 0x57, 0x72, 0x3c, 0xaa, 0x23, 0xa5, 0xb5, 0x11, 0xaf, 0x5a, 0xd7, 0xb7, 0xef, 0x60, 0x76, 0xe4, 0x14, 0xab, 0x7e, 0x75, 0xa9, 0xdc, 0x91, 0xe, 0xa6, 0xe, 0x41, 0x7a, 0x2b, 0x77, 0xa, 0x56, 0x71}                              //nolint: lll
	alicePublicKey       = PublicKey{key: []byte{0x72, 0x3c, 0xaa, 0x23, 0xa5, 0xb5, 0x11, 0xaf, 0x5a, 0xd7, 0xb7, 0xef, 0x60, 0x76, 0xe4, 0x14, 0xab, 0x7e, 0x75, 0xa9, 0xdc, 0x91, 0xe, 0xa6, 0xe, 0x41, 0x7a, 0x2b, 0x77, 0xa, 0x56, 0x71}}                                                                                                                                                                                                          //nolint: lll
	alicePublicKeyBytes  = []byte{0x72, 0x3c, 0xaa, 0x23, 0xa5, 0xb5, 0x11, 0xaf, 0x5a, 0xd7, 0xb7, 0xef, 0x60, 0x76, 0xe4, 0x14, 0xab, 0x7e, 0x75, 0xa9, 0xdc, 0x91, 0xe, 0xa6, 0xe, 0x41, 0x7a, 0x2b, 0x77, 0xa, 0x56, 0x71}                                                                                                                                                                                                                          //nolint: lll

	bobSeed            = encodingtest.MustDecodeHex("39d4c97d6a7f9e3306a2b5aae604ee67ec8b1387fffb39128fc055656cff05bb")                                                                                                                                                                                                                                                                                                                                 //nolint: lll
	bobPrivateKey      = PrivateKey{key: ed25519.PrivateKey{0x39, 0xd4, 0xc9, 0x7d, 0x6a, 0x7f, 0x9e, 0x33, 0x6, 0xa2, 0xb5, 0xaa, 0xe6, 0x4, 0xee, 0x67, 0xec, 0x8b, 0x13, 0x87, 0xff, 0xfb, 0x39, 0x12, 0x8f, 0xc0, 0x55, 0x65, 0x6c, 0xff, 0x5, 0xbb, 0x2e, 0x32, 0x2f, 0x87, 0x40, 0xc6, 0x1, 0x72, 0x11, 0x1a, 0xc8, 0xea, 0xdc, 0xdd, 0xa2, 0x51, 0x2f, 0x90, 0xd0, 0x6d, 0xe, 0x50, 0x3e, 0xf1, 0x89, 0x97, 0x9a, 0x15, 0x9b, 0xec, 0xe1, 0xe8}} //nolint: lll
	bobPrivateKeyBytes = []byte{0x39, 0xd4, 0xc9, 0x7d, 0x6a, 0x7f, 0x9e, 0x33, 0x6, 0xa2, 0xb5, 0xaa, 0xe6, 0x4, 0xee, 0x67, 0xec, 0x8b, 0x13, 0x87, 0xff, 0xfb, 0x39, 0x12, 0x8f, 0xc0, 0x55, 0x65, 0x6c, 0xff, 0x5, 0xbb, 0x2e, 0x32, 0x2f, 0x87, 0x40, 0xc6, 0x1, 0x72, 0x11, 0x1a, 0xc8, 0xea, 0xdc, 0xdd, 0xa2, 0x51, 0x2f, 0x90, 0xd0, 0x6d, 0xe, 0x50, 0x3e, 0xf1, 0x89, 0x97, 0x9a, 0x15, 0x9b, 0xec, 0xe1, 0xe8}                              //nolint: lll
	bobPublicKey       = PublicKey{key: []byte{0x2e, 0x32, 0x2f, 0x87, 0x40, 0xc6, 0x1, 0x72, 0x11, 0x1a, 0xc8, 0xea, 0xdc, 0xdd, 0xa2, 0x51, 0x2f, 0x90, 0xd0, 0x6d, 0xe, 0x50, 0x3e, 0xf1, 0x89, 0x97, 0x9a, 0x15, 0x9b, 0xec, 0xe1, 0xe8}}                                                                                                                                                                                                           //nolint: lll
	bobPublicKeyBytes  = []byte{0x2e, 0x32, 0x2f, 0x87, 0x40, 0xc6, 0x1, 0x72, 0x11, 0x1a, 0xc8, 0xea, 0xdc, 0xdd, 0xa2, 0x51, 0x2f, 0x90, 0xd0, 0x6d, 0xe, 0x50, 0x3e, 0xf1, 0x89, 0x97, 0x9a, 0x15, 0x9b, 0xec, 0xe1, 0xe8}                                                                                                                                                                                                                           //nolint: lll
)
